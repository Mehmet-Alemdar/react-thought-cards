{"ast":null,"code":"var _jsxFileName = \"/Users/mehmetalemdar/Desktop/thought-card/src/components/ThoughtForm.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { closePopup } from '../features/popup/popupFormSlice';\nimport { addThought } from '../features/thought/thoughtSlice';\nimport { createDate } from '../lib/createDate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ThoughtForm() {\n  _s();\n\n  const dispatch = useDispatch();\n  const popupForm = useSelector(state => state.popupForm.value);\n\n  const handleClick = () => {\n    const title = document.getElementById('title').value;\n    const content = document.getElementById('content').value;\n    const popupEdit = false;\n    const date = createDate();\n    const thought = {\n      title,\n      content,\n      popupEdit,\n      date\n    };\n    dispatch(addThought(thought));\n    dispatch(closePopup());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: popupForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thoughtForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            className: \"formInputTitle\",\n            placeholder: \"Title\",\n            maxLength: \"110\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"hrForm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"content\",\n            className: \"formTextareaContent\",\n            rows: \"10\",\n            cols: \"40\",\n            placeholder: \"Write Your Thought\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonAdd\",\n          type: \"button\",\n          onClick: handleClick,\n          children: \"Yes I Think So\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonClose\",\n          onClick: () => dispatch(closePopup()),\n          children: \"Nevermind\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThoughtForm, \"vsY0+n4tvyyOqsfbqt+nIuic2LQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ThoughtForm;\nexport default ThoughtForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThoughtForm\");","map":{"version":3,"sources":["/Users/mehmetalemdar/Desktop/thought-card/src/components/ThoughtForm.js"],"names":["useSelector","useDispatch","closePopup","addThought","createDate","ThoughtForm","dispatch","popupForm","state","value","handleClick","title","document","getElementById","content","popupEdit","date","thought"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;;;AAEA,SAASC,WAAT,GAAwB;AAAA;;AACtB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAMM,SAAS,GAAGP,WAAW,CAACQ,KAAK,IAAGA,KAAK,CAACD,SAAN,CAAgBE,KAAzB,CAA7B;;AAEA,QAAMC,WAAW,GAAG,MAAM;AAExB,UAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCJ,KAA/C;AACA,UAAMK,OAAO,GAAGF,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCJ,KAAnD;AACA,UAAMM,SAAS,GAAG,KAAlB;AACA,UAAMC,IAAI,GAAGZ,UAAU,EAAvB;AAEA,UAAMa,OAAO,GAAG;AACdN,MAAAA,KADc;AAEdG,MAAAA,OAFc;AAGdC,MAAAA,SAHc;AAIdC,MAAAA;AAJc,KAAhB;AAOAV,IAAAA,QAAQ,CAACH,UAAU,CAACc,OAAD,CAAX,CAAR;AAEAX,IAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;AACD,GAjBD;;AAmBA,sBACE;AAAA,cAEIK,SAAS,iBACT;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,EAAE,EAAC,OAFL;AAGE,YAAA,SAAS,EAAC,gBAHZ;AAIE,YAAA,WAAW,EAAC,OAJd;AAKE,YAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA;AAAA;AAAA;AAAA,kBARF,eASE;AAAI,YAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AACE,YAAA,EAAE,EAAC,SADL;AAEE,YAAA,SAAS,EAAC,qBAFZ;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,IAAI,EAAC,IAJP;AAKE,YAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAoBE;AACE,UAAA,SAAS,EAAC,WADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAEG,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF,eA0BE;AAAA;AAAA;AAAA;AAAA,gBA1BF,eA2BE;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,OAAO,EAAE,MAAMJ,QAAQ,CAACJ,UAAU,EAAX,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GAnEQG,W;UACUJ,W,EAECD,W;;;KAHXK,W;AAqET,eAAeA,WAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux'\nimport { closePopup } from '../features/popup/popupFormSlice'\nimport { addThought } from '../features/thought/thoughtSlice'\nimport { createDate } from '../lib/createDate'\n\nfunction ThoughtForm () {\n  const dispatch = useDispatch()\n\n  const popupForm = useSelector(state=> state.popupForm.value)\n  \n  const handleClick = () => {\n    \n    const title = document.getElementById('title').value\n    const content = document.getElementById('content').value\n    const popupEdit = false\n    const date = createDate()\n\n    const thought = {\n      title,\n      content,\n      popupEdit,\n      date\n    }\n\n    dispatch(addThought(thought))\n\n    dispatch(closePopup())\n  }\n  \n  return (\n    <div> \n      {\n        popupForm && \n        <div className='bg'>\n          <div className=\"thoughtForm\">\n            <form className=\"form\">\n              <input\n                type='text' \n                id='title' \n                className='formInputTitle' \n                placeholder='Title'\n                maxLength=\"110\">\n              </input> \n              <br />\n              <hr className='hrForm'/>\n              <textarea \n                id='content' \n                className='formTextareaContent' \n                rows=\"10\" \n                cols=\"40\"\n                placeholder='Write Your Thought'\n                >\n              </textarea> \n            </form>\n            <button\n              className='buttonAdd'\n              type='button' \n              onClick={handleClick}>\n                Yes I Think So\n            </button>\n            <br />\n            <button\n              className='buttonClose'\n              onClick={() => dispatch(closePopup())}>\n                Nevermind\n            </button>\n          </div>\n        </div>\n\n      }\n    </div>\n  )\n}\n\nexport default ThoughtForm"]},"metadata":{},"sourceType":"module"}