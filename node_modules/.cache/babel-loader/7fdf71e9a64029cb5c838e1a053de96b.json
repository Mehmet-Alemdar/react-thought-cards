{"ast":null,"code":"var _jsxFileName = \"/Users/mehmetalemdar/Desktop/thought-card/src/components/ThoughtForm.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { closePopup } from '../features/form/popupFormSlice';\nimport { addThought } from '../features/thought/thoughtSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ThoughtForm() {\n  _s();\n\n  const dispatch = useDispatch();\n  const popupForm = useSelector(state => state.popupForm.value);\n  let id = 0;\n\n  const handleClick = () => {\n    id++;\n    const title = document.getElementById('title').value;\n    const content = document.getElementById('content').value;\n    const thought = {\n      id,\n      title,\n      content\n    };\n    dispatch(addThought(thought));\n    dispatch(closePopup());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: popupForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thoughtForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            className: \"inputTitle\",\n            placeholder: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 97\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"hrForm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"content\",\n            className: \"textareaContent\",\n            rows: \"10\",\n            cols: \"40\",\n            placeholder: \"Write Your Thought\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonAdd\",\n          type: \"button\",\n          onClick: handleClick,\n          children: \"Yes I Think So\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonClose\",\n          onClick: () => dispatch(closePopup()),\n          children: \"Nevermind\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThoughtForm, \"vsY0+n4tvyyOqsfbqt+nIuic2LQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ThoughtForm;\nexport default ThoughtForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThoughtForm\");","map":{"version":3,"sources":["/Users/mehmetalemdar/Desktop/thought-card/src/components/ThoughtForm.js"],"names":["useSelector","useDispatch","closePopup","addThought","ThoughtForm","dispatch","popupForm","state","value","id","handleClick","title","document","getElementById","content","thought"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,iCAA3B;AACA,SAASC,UAAT,QAA2B,kCAA3B;;;AAEA,SAASC,WAAT,GAAwB;AAAA;;AACtB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAMK,SAAS,GAAGN,WAAW,CAACO,KAAK,IAAGA,KAAK,CAACD,SAAN,CAAgBE,KAAzB,CAA7B;AAEA,MAAIC,EAAE,GAAG,CAAT;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxBD,IAAAA,EAAE;AACF,UAAME,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCL,KAA/C;AACA,UAAMM,OAAO,GAAGF,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCL,KAAnD;AAEA,UAAMO,OAAO,GAAG;AACdN,MAAAA,EADc;AAEdE,MAAAA,KAFc;AAGdG,MAAAA;AAHc,KAAhB;AAMAT,IAAAA,QAAQ,CAACF,UAAU,CAACY,OAAD,CAAX,CAAR;AAEAV,IAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACD,GAdD;;AAeA,sBACE;AAAA,cAEII,SAAS,iBACT;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA,kCACE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,OAAtB;AAA8B,YAAA,SAAS,EAAC,YAAxC;AAAqD,YAAA,WAAW,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,kBADF,oBACoF;AAAA;AAAA;AAAA;AAAA,kBADpF,eAEE;AAAI,YAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AACE,YAAA,EAAE,EAAC,SADL;AAEE,YAAA,SAAS,EAAC,iBAFZ;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,IAAI,EAAC,IAJP;AAKE,YAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE;AACE,UAAA,SAAS,EAAC,WADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAEI,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAmBE;AAAA;AAAA;AAAA;AAAA,gBAnBF,eAoBE;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,OAAO,EAAE,MAAML,QAAQ,CAACH,UAAU,EAAX,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GAzDQE,W;UACUH,W,EAECD,W;;;KAHXI,W;AA2DT,eAAeA,WAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux'\nimport { closePopup } from '../features/form/popupFormSlice'\nimport { addThought } from '../features/thought/thoughtSlice'\n\nfunction ThoughtForm () {\n  const dispatch = useDispatch()\n\n  const popupForm = useSelector(state=> state.popupForm.value)\n\n  let id = 0\n  const handleClick = () => {\n    id++\n    const title = document.getElementById('title').value\n    const content = document.getElementById('content').value\n\n    const thought = {\n      id,\n      title,\n      content\n    }\n\n    dispatch(addThought(thought))\n\n    dispatch(closePopup())\n  }\n  return (\n    <div> \n      {\n        popupForm && \n        <div className='bg'>\n          <div className=\"thoughtForm\">\n            <form className=\"form\">\n              <input type='text' id='title' className='inputTitle' placeholder='Title'></input> <br />\n              <hr className='hrForm'/>\n              <textarea \n                id='content' \n                className='textareaContent' \n                rows=\"10\" \n                cols=\"40\"\n                placeholder='Write Your Thought'\n                >\n              </textarea> \n            </form>\n            <button\n              className='buttonAdd'\n              type='button' \n              onClick={handleClick}>\n                Yes I Think So\n            </button>\n            <br />\n            <button\n              className='buttonClose'\n              onClick={() => dispatch(closePopup())}>\n                Nevermind\n            </button>\n          </div>\n        </div>\n\n      }\n    </div>\n  )\n}\n\nexport default ThoughtForm"]},"metadata":{},"sourceType":"module"}