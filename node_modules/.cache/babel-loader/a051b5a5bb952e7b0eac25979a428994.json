{"ast":null,"code":"var _jsxFileName = \"/Users/mehmetalemdar/Desktop/thought-card/src/components/Thoughts.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeThought } from '../features/thought/thoughtSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Thoughts() {\n  _s();\n\n  const dispatch = useDispatch();\n  const thoughts = useSelector(state => state.thought.thoughts);\n  const card = document.querySelector('.thoughtCard');\n  let buttonRemove = '';\n\n  const handleHover = () => {\n    card.classList.add('c');\n  };\n\n  const thoughtItems = thoughts.map((thought, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thoughtCard\",\n    onClick: handleHover,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: buttonRemove,\n      onClick: () => dispatch(removeThought(thought)),\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: thought.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: thought.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thoughts\",\n    children: thoughtItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Thoughts, \"nWe14k2u4bFd3X48E+XZ/qNnLZU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Thoughts;\nexport default Thoughts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thoughts\");","map":{"version":3,"sources":["/Users/mehmetalemdar/Desktop/thought-card/src/components/Thoughts.js"],"names":["useSelector","useDispatch","removeThought","Thoughts","dispatch","thoughts","state","thought","card","document","querySelector","buttonRemove","handleHover","classList","add","thoughtItems","map","index","title","content"],"mappings":";;;AAAA,SAAQA,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,aAAT,QAA8B,kCAA9B;;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,QAAMI,QAAQ,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcF,QAAxB,CAA5B;AACA,QAAMG,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAb;AAEA,MAAIC,YAAY,GAAG,EAAnB;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxBJ,IAAAA,IAAI,CAACK,SAAL,CAAeC,GAAf,CAAmB,GAAnB;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGV,QAAQ,CAACW,GAAT,CAAa,CAACT,OAAD,EAAUU,KAAV,kBAChC;AAAiB,IAAA,SAAS,EAAC,aAA3B;AAAyC,IAAA,OAAO,EAAEL,WAAlD;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAED,YAAnB;AAAiC,MAAA,OAAO,EAAE,MAAMP,QAAQ,CAACF,aAAa,CAACK,OAAD,CAAd,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKA,OAAO,CAACW;AAAb;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AAAA,kBAAIX,OAAO,CAACY;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,KAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,UADmB,CAArB;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA7BQZ,Q;UACUF,W,EAEAD,W;;;KAHVG,Q;AA+BT,eAAeA,QAAf","sourcesContent":["import {useSelector, useDispatch} from 'react-redux'\nimport { removeThought } from '../features/thought/thoughtSlice'\nfunction Thoughts() {\n  const dispatch = useDispatch()\n\n  const thoughts = useSelector(state => state.thought.thoughts)\n  const card = document.querySelector('.thoughtCard')\n\n  let buttonRemove = ''\n  const handleHover = () => {\n    card.classList.add('c')\n  }\n\n  const thoughtItems = thoughts.map((thought, index) => \n    <div key={index} className=\"thoughtCard\" onClick={handleHover}>\n      <button className={buttonRemove} onClick={() => dispatch(removeThought(thought))}>x</button>\n      <h3>{thought.title}</h3>\n      <hr />\n      <div className='contentContainer'>\n        <p>{thought.content}</p>\n      </div>\n    </div>\n  )\n\n\n\n  return (\n    <div className=\"thoughts\">\n      {thoughtItems}\n    </div>\n  )\n}\n\nexport default Thoughts"]},"metadata":{},"sourceType":"module"}